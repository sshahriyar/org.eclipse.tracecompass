##/*********************************************************************************************
#* Copyright (c) 2014-2015  Software Behaviour Analysis Lab, Concordia University, Montreal, Canada
#*
#* All rights reserved. This program and the accompanying materials
# * are made available under the terms of Eclipse Public License v1.0 License which
# * accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html
# *
# * Contributors:
# *    Syed Shariyar Murtaza -- Initial design and implementation
# **********************************************************************************************/

HiddenMarkovModel_ReTrainHMM=Unknown events in your validation traces: Though HMM model is successfully built, consider retraining using larger number of unique events
HiddenMarkovModel_AnomalousPatterns=Anomalous pattern of events found in the sequence: \n
HiddenMarkovModel_AdditionalEvents=\nMore than 100 unknown events, only 100 are shown here: \n
HiddenMarkovModel_Anomaly=Anomaly:
HiddenMarkovModel_BaumWelchMsg=Training using BaumWelch..can take really long depending on the size and number of traces
HiddenMarkovModel_Description=HMM is a stochastic model for sequential data and hence it is naturally suitable for modeling temporal order of\
system call sequences. The process is determined by a latent Markov chain having a finite number of\
states, N, and a set of output observation probability distributions, B, associated with each state.\
Starting from an initial state No, the process transits from one state to another according to the matrix \
of transition probability distribution, A, and then emits an observation symbol Ok from a finite alphabet \
(i.e., M distinct observable events) according to the output probability distribution, Bj(Ok), of the current\
state Nj. HMM is typically parameterized by the initial state distribution probabilities (\u03A0), \
output (emission) probabilities (B), and state transition probabilities (A). Baulm-Welch algorithm is used \
to train the model parameters to fit the sequences of observations, T.  During the validation phase,\
HMM adjusts the decision threshold (log likelihood) of prediction of anomalous alarms on T sequences \
from traces. In the testing phase, if the probability value of any sequence in a trace is below the \
selected threshold, then we consider the trace as anomalous otherwise we consider it as normal.

HiddenMarkovModel_EventsOverlaodMsg=More events were found in the trace than you mentioned.
HiddenMarkovModel_ExtractionMsg=Extracting sequences, please wait....
HiddenMarkovModel_Finish=Finished evaluating the trace
HiddenMarkovModel_HMMErrorMsg=\ Please, select larger number of unique events and start fresh with a new model. HMM model cannot be built\!
HiddenMarkovModel_MinLogLikeliHood=Minimum Log Likelihood Threshold:
HiddenMarkovModel_NullArguments=Please do not provide null variables
HiddenMarkovModel_SaveHMMMsg=Saving HMM to the database
HiddenMarkovModel_SequenceEvalMsg=Evaluating sequences, please wait...
HiddenMarkovModel_SequenceExtrractionMsg=Extracting Sequences
HiddenMarkovModel_SpecificSeq=Executing {0} th sequence
HiddenMarkovModel_UnkownEvents=\nUnknown events: \n
HiddenMarkovModel_ValidationFinished=Finished validation
HiddenMarkovModel_ValidationStart=Starting validation
HmmMahout_HmmModel=HMM model:\n
HmmMahout_Transition=Transition Probabilities:\n
HmmMahout_Initial=Initial Probabilities:\n
HmmMahout_EmisssionProbs=Emission Probabilities:\n
HmmMahout_HiddenStates=Hidden States:\n
HmmMahout_ObservableEvents=Observable Events:\n
HmmMahout_SelectDecForLog=Select a decimal number for the log likelihood threshold
HmmMahout_SelectIntIteration=Select a integer for number of iterations
HmmMahout_SelectIntSeq=Select an integer for sequence length
HmmMahout_SelectIntStates=Select an integer for number of states
HmmMahout_SelectIntSymbols=Select an integer for number of symbols
HmmMahout_SelectIterations=Number of iterations can't be 0 or less
HmmMahout_SelectNegForLog=Log likelihood should be a negative decimal number
